Design a HashSet without using any built-in hash table libraries.

Implement MyHashSet class:

void add(key) Inserts the value key into the HashSet.
bool contains(key) Returns whether the value key exists in the HashSet or not.
void remove(key) Removes the value key in the HashSet. If key does not exist in the HashSet, do nothing.
 

Example 1:

Input
["MyHashSet", "add", "add", "contains", "contains", "add", "contains", "remove", "contains"]
[[], [1], [2], [1], [3], [2], [2], [2], [2]]
Output
[null, null, null, true, false, null, true, null, false]

Explanation
MyHashSet myHashSet = new MyHashSet();
myHashSet.add(1);      // set = [1]
myHashSet.add(2);      // set = [1, 2]
myHashSet.contains(1); // return True
myHashSet.contains(3); // return False, (not found)
myHashSet.add(2);      // set = [1, 2]
myHashSet.contains(2); // return True
myHashSet.remove(2);   // set = [1]
myHashSet.contains(2); // return False, (already removed)

class Node
{
    int value;
    Node next;
    public Node(int value)
    {
        this.value=value;
    }
}
class MyHashSet {
    
    Node head=null;
   
    
    /** Initialize your data structure here. */
    public MyHashSet() {
        
    }
    
    public void add(int key) {
        
        Node newNode=new Node(key);
        if(head==null)
        {
            head=newNode;
            return;
        }
        Node prev=head;
        Node cur=head;
        while(cur!=null && cur.value!=key)
        {
            
            prev=cur;
            cur=cur.next;
        }
        if(cur==null)
        {
            prev.next=newNode;
        }
        
        
    }
    
    public void remove(int key) {
       if(head==null)
            return;
        Node cur=head;
        Node prev=head;
        while(cur!=null && cur.value!=key)
        {
            prev=cur;
            cur=cur.next;
        }
        if(cur!=null)
        {
            if(cur==head)
            {
                head=head.next;
                return;
            }
            prev.next=cur.next;
        }
        
    }
    
    /** Returns true if this set contains the specified element */
    public boolean contains(int key) {
        
        Node cur=head;
        while(cur!=null)
        {
            if(cur.value==key)
                return true;
            cur=cur.next;
        }
        return false;
        
    }
}

/**
 * Your MyHashSet object will be instantiated and called as such:
 * MyHashSet obj = new MyHashSet();
 * obj.add(key);
 * obj.remove(key);
 * boolean param_3 = obj.contains(key);
 */
